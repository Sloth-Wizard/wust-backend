//! SeaORM Entity. Generated by sea-orm-codegen 0.6.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "wf_webtoons")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id_webtoon: i32,
    pub date_crea: DateTime,
    pub date_modif: DateTime,
    pub titre: String,
    pub date_debut: DateTime,
    pub r#ref: String,
    pub episode: i32,
    pub slug: String,
    pub serie_id: i32,
    pub saison_id: i32,
    #[sea_orm(column_type = "Text")]
    pub description: String,
    pub image: String,
    pub background: String,
    #[sea_orm(column_type = "Text")]
    pub json: String,
    #[sea_orm(column_type = "Text")]
    pub json_brouillon: String,
    pub explicit: i8,
    #[sea_orm(column_type = "Decimal(Some((4, 2)))")]
    pub coins: Decimal,
    #[sea_orm(column_type = "Decimal(Some((4, 2)))")]
    pub coins_promo: Decimal,
    pub acces: i8,
    #[sea_orm(column_type = "Decimal(Some((4, 2)))")]
    pub prix: Decimal,
    pub promo: i8,
    pub ean: String,
    pub ean_gratuit: String,
    pub aimes: i32,
    #[sea_orm(column_type = "Text")]
    pub fb_texte: String,
    pub fb_image: String,
    pub fb_image_w: i32,
    pub fb_image_h: i32,
    pub lang: String,
    pub valide: i8,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
