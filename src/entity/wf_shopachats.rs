//! SeaORM Entity. Generated by sea-orm-codegen 0.6.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "wf_shopachats")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id_achat: i32,
    pub date_crea: DateTime,
    pub date_modif: DateTime,
    pub ami_id: i32,
    pub nocommande: String,
    pub produit_id: i32,
    pub produit_ref: String,
    pub produit_titre: String,
    pub coins: i32,
    pub mois: Option<i32>,
    #[sea_orm(column_type = "Decimal(Some((6, 2)))")]
    pub total: Decimal,
    #[sea_orm(column_type = "Decimal(Some((6, 2)))", nullable)]
    pub reduction: Option<Decimal>,
    pub devise: String,
    pub code: Option<String>,
    pub code_id: Option<i32>,
    pub codeunique_id: Option<i32>,
    pub paiement: String,
    pub ogone: Option<String>,
    pub ogone_pays: Option<String>,
    pub paypal_id: Option<String>,
    pub paypal_email: Option<String>,
    pub paypal_status: Option<String>,
    pub paypal_pays: Option<String>,
    #[sea_orm(column_type = "Decimal(Some((4, 2)))", nullable)]
    pub paypal_frais: Option<Decimal>,
    pub paypal_frais_devise: Option<String>,
    pub statut: String,
    pub valide: i8,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
